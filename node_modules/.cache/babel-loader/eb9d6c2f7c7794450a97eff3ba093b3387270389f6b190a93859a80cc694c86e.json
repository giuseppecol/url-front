{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\url-shortener\\\\frontend\\\\src\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Correctly using useNavigate() inside a Router context\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isRegistering ? '/api/register' : '/api/login';\n    try {\n      const response = await axios.post(url, {\n        email,\n        password,\n        name\n      });\n      localStorage.setItem('token', response.data.token);\n      navigate('/urls'); // Use navigate to redirect the user\n    } catch (err) {\n      setError('Error en el inicio de sesión o registro');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Registrarse' : 'Iniciar Sesión'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegistering ? 'Registrarse' : 'Iniciar Sesión'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegistering(!isRegistering),\n      children: isRegistering ? '¿Ya tienes cuenta? Iniciar sesión' : '¿No tienes cuenta? Registrarse'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"Kh5Pt4XMKOyg5V66gVjcFiCYJg0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","name","setName","password","setPassword","isRegistering","setIsRegistering","error","setError","navigate","handleSubmit","e","preventDefault","url","response","post","localStorage","setItem","data","token","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/url-shortener/frontend/src/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from './axios'; \r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();  // Correctly using useNavigate() inside a Router context\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const url = isRegistering ? '/api/register' : '/api/login';\r\n    \r\n    try {\r\n      const response = await axios.post(url, { email, password, name });\r\n      localStorage.setItem('token', response.data.token);\r\n      navigate('/urls');  // Use navigate to redirect the user\r\n    } catch (err) {\r\n      setError('Error en el inicio de sesión o registro');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{isRegistering ? 'Registrarse' : 'Iniciar Sesión'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">{isRegistering ? 'Registrarse' : 'Iniciar Sesión'}</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n      <button onClick={() => setIsRegistering(!isRegistering)}>\r\n        {isRegistering ? '¿Ya tienes cuenta? Iniciar sesión' : '¿No tienes cuenta? Registrarse'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}